user www-data;
worker_processes auto;
pid /run/nginx.pid;

worker_rlimit_nofile 200000;

events {
    worker_connections 768;
}

http {
    log_format ltsv "time:$time_local"
                    "\thost:$remote_addr"
                    "\tmethod:$request_method"
                    "\turi:$request_uri"
                    "\tprotocol:$server_protocol"
                    "\tstatus:$status"
                    "\tsize:$body_bytes_sent"
                    "\treferer:$http_referer"
                    "\tua:$http_user_agent"
                    "\ttaken_sec:$request_time"
                    "\tupstream_taken_sec:$upstream_response_time"
    ;
    access_log /var/log/nginx/access.log ltsv;

    server_tokens off;

    # サーバー証明書と秘密鍵を指定
    # ssl_certificate /etc/letsencrypt/live/isucon6f.example.com/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/isucon6f.example.com/privkey.pem;

    # サーバーの暗号化スイート設定を優先
    ssl_prefer_server_ciphers on;

    # Mozilla WikiのIntermediateレベル(互換性をある程度担保した設定)による暗号化スイートの設定
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';

    # DH鍵交換のパラメータファイル
    ssl_dhparam /etc/nginx/ssl/dhparam.pem;

    # SSL Session Cacheを有効にする
    ssl_session_cache    shared:SSL:10m;
    ssl_session_timeout  10m;

    # TLS Session Ticketsを有効にする
    ssl_session_tickets on;
    ssl_session_ticket_key /etc/nginx/ssl/ticket.key;

    server {
        listen 443 http2 ssl;

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;

        location /mBGWHqBVEjUSKpBF/ {
            auth_basic "Authentication Required";
            auth_basic_user_file "/etc/nginx/isucon6q.htpasswd";
            proxy_pass http://127.0.0.1:8080;
        }

        location / {
            proxy_pass http://127.0.0.1:8080;
        }
    }

    server {
        listen 80;
        return 301 https://$host$request_uri;
    }

    server {
        listen 8000;
        location /nginx_status {
            stub_status on;
            access_log off;
        }
    }
}
